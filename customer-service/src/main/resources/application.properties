spring.application.name=customer-service
server.port=8080
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
eureka.client.healthcheck.enabled=true
eureka.instance.leaseRenewalIntervalInSeconds= 1
eureka.instance.leaseExpirationDurationInSeconds= 2
ribbon.eureka.enabled=true

#spring.datasource.url=jdbc:h2:mem:testdb
spring.data.jpa.repositories.bootstrap-mode=default
spring.jpa.show-sql=true
spring.h2.console.enabled=true

spring.datasource.url=jdbc:h2:tcp://localhost:9090/mem:mydb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.hibernate.ddl-auto=update

logging.level.org.springframework=info


config.prop.customerNotvailable=Customer is not present

config.prop.errMessage.age.notvalid=Age is not valid
config.prop.errMessage.name.notvalid=Name is not valid
config.prop.errMessage.email.notvalid=Email is not valid
config.prop.errMessage.address.notvalid=Address is not valid 
config.prop.errMessage.phone.notvalid=Phone is not valid 
config.prop.errMessage.age.empty=Age cannot be empty
config.prop.errMessage.name.empty=Name cannot be empty
config.prop.errMessage.email.empty=Email cannot be empty
config.prop.errMessage.address.empty=Address cannot be empty 
config.prop.errMessage.phone.empty=Phone cannot be empty